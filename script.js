// –î–∞–Ω–Ω—ã–µ —Ç–æ–≤–∞—Ä–æ–≤

const products = [

    {

        id: 1,

        name: "–ú–æ—Ä—Å—å–∫–∞ —Ö–≤–∏–ª—è",

        price: 60,

        icon: "üåä",

        colors: 3,

        description: "–°–∏–Ω—å–æ-–±–ª–∞–∫–∏—Ç–Ω—ñ –ø–µ—Ä–µ–ª–∏–≤–∏"

    },

    {

        id: 2,

        name: "–¢—Ä–æ–ø—ñ—á–Ω–∞ —Ä–∏–±–∞", 

        price: 90,

        icon: "üê†",

        colors: 4,

        description: "–Ø—Å–∫—Ä–∞–≤—ñ –∫–æ–ª—å–æ—Ä–∏ —Ä–∏—Ñ—É"

    },

    {

        id: 3,

        name: "–ó–æ–ª–æ—Ç–∞ —Ä–∏–±–∫–∞",

        price: 90, 

        icon: "‚≠ê",

        colors: 4,

        description: "–ó–æ–ª–æ—Ç–∞–≤—ñ –≤—ñ–¥—Ç—ñ–Ω–∫–∏"

    },

    {

        id: 4,

        name: "–í–µ—Å–µ–ª–∫–∞",

        price: 110,

        icon: "üåà", 

        colors: 6,

        description: "–£—Å—ñ –∫–æ–ª—å–æ—Ä–∏ –≤–µ—Å–µ–ª–∫–∏"

    },

    {

        id: 5,

        name: "–§—ñ–æ–ª–µ—Ç–æ–≤–∞ –º—Ä—ñ—è",

        price: 80,

        icon: "üíú",

        colors: 3, 

        description: "–ù—ñ–∂–Ω—ñ —Ñ—ñ–æ–ª–µ—Ç–æ–≤—ñ —Ç–æ–Ω–∏"

    },

    {

        id: 6,

        name: "–°–º–∞—Ä–∞–≥–¥–æ–≤–µ –º–æ—Ä–µ",

        price: 100,

        icon: "üíö",

        colors: 5,

        description: "–ó–µ–ª–µ–Ω—ñ –≤—ñ–¥—Ç—ñ–Ω–∫–∏ –º–æ—Ä—è"

    }

];

let cart = [];

let orderNumber = 1001;

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Å—Ç—Ä–∞–Ω–∏—Ü—ã

function init() {

    renderProducts();

    updateCartBadge();

}

// –ü–æ–∫–∞–∑–∞—Ç—å —Ç–æ–≤–∞—Ä—ã

function renderProducts() {

    const grid = document.getElementById('productsGrid');

    grid.innerHTML = products.map(product => `

        <div class="product-card">

            <div class="product-image">

                ${product.icon}

            </div>

            <div class="product-info">

                <h3 class="product-name">${product.name}</h3>

                <p>${product.description}</p>

                <p><small>${product.colors} –∫–æ–ª—å–æ—Ä–∏</small></p>

                <div class="product-price">${product.price} –≥—Ä–Ω</div>

                <button class="add-btn" onclick="addToCart(${product.id})">

                    –î–æ–¥–∞—Ç–∏ –≤ –∫–æ—à–∏–∫

                </button>

            </div>

        </div>

    `).join('');

}

// –î–æ–±–∞–≤–∏—Ç—å –≤ –∫–æ—Ä–∑–∏–Ω—É

function addToCart(productId) {

    const product = products.find(p => p.id === productId);

    const existingItem = cart.find(item => item.id === productId);

    if (existingItem) {

        existingItem.quantity += 1;

    } else {

        cart.push({

            ...product,

            quantity: 1

        });

    }

    updateCartBadge();

    showNotification('‚úÖ –¢–æ–≤–∞—Ä –¥–æ–¥–∞–Ω–æ –≤ –∫–æ—à–∏–∫!');

}

// –û–±–Ω–æ–≤–∏—Ç—å —Å—á–µ—Ç—á–∏–∫ –∫–æ—Ä–∑–∏–Ω—ã

function updateCartBadge() {

    const totalItems = cart.reduce((sum, item) => sum + item.quantity, 0);

    document.getElementById('cartBadge').textContent = totalItems;

}

// –û—Ç–∫—Ä—ã—Ç—å –∫–æ—Ä–∑–∏–Ω—É

function openCart() {

    renderCart();

    document.getElementById('cartModal').style.display = 'block';

}

// –ó–∞–∫—Ä—ã—Ç—å –∫–æ—Ä–∑–∏–Ω—É

function closeCart() {

    document.getElementById('cartModal').style.display = 'none';

}

// –ü–æ–∫–∞–∑–∞—Ç—å –∫–æ—Ä–∑–∏–Ω—É

function renderCart() {

    const cartBody = document.getElementById('cartBody');

    

    if (cart.length === 0) {

        cartBody.innerHTML = '<p style="text-align: center; padding: 2rem;">–ö–æ—à–∏–∫ –ø–æ—Ä–æ–∂–Ω—ñ–π</p>';

        return;

    }

    const total = cart.reduce((sum, item) => sum + (item.price * item.quantity), 0);

    

    cartBody.innerHTML = `

        ${cart.map(item => `

            <div class="cart-item">

                <div>

                    <strong>${item.name}</strong>

                    <br>

                    <small>${item.quantity} √ó ${item.price} –≥—Ä–Ω</small>

                </div>

                <div>

                    <strong>${item.price * item.quantity} –≥—Ä–Ω</strong>

                    <br>

                    <button onclick="removeFromCart(${item.id})" style="

                        background: #ff4757;

                        color: white;

                        border: none;

                        padding: 0.3rem 0.6rem;

                        border-radius: 5px;

                        cursor: pointer;

                        margin-top: 0.3rem;

                        font-size: 0.8rem;

                    ">–í–∏–¥–∞–ª–∏—Ç–∏</button>

                </div>

            </div>

        `).join('')}

        <div class="cart-total">

            –ó–∞–≥–∞–ª—å–Ω–∞ —Å—É–º–∞: ${total} –≥—Ä–Ω

        </div>

        <div style="margin-top: 1rem;">

            <input type="text" id="customerName" placeholder="–í–∞—à–µ —ñ–º'—è" style="width: 100%; padding: 0.8rem; margin-bottom: 0.5rem; border: 1px solid #ddd; border-radius: 5px;">

            <input type="tel" id="customerPhone" placeholder="–ù–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω—É" style="width: 100%; padding: 0.8rem; margin-bottom: 0.5rem; border: 1px solid #ddd; border-radius: 5px;">

            <textarea id="customerAddress" placeholder="–ê–¥—Ä–µ—Å–∞ –¥–æ—Å—Ç–∞–≤–∫–∏" style="width: 100%; padding: 0.8rem; margin-bottom: 1rem; border: 1px solid #ddd; border-radius: 5px; height: 60px;"></textarea>

        </div>

        <button class="checkout-btn" onclick="checkout()">

            üìß –ù–∞–¥—ñ—Å–ª–∞—Ç–∏ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è –Ω–∞ –ø–æ—à—Ç—É

        </button>

    `;

}

// –£–¥–∞–ª–∏—Ç—å –∏–∑ –∫–æ—Ä–∑–∏–Ω—ã

function removeFromCart(productId) {

    cart = cart.filter(item => item.id !== productId);

    updateCartBadge();

    renderCart();

}

// –û—Ñ–æ—Ä–º–ª–µ–Ω–∏–µ –∑–∞–∫–∞–∑–∞

function checkout() {

    if (cart.length === 0) {

        showNotification('‚ùå –ö–æ—à–∏–∫ –ø–æ—Ä–æ–∂–Ω—ñ–π!');

        return;

    }

    const customerName = document.getElementById('customerName').value;

    const customerPhone = document.getElementById('customerPhone').value;

    const customerAddress = document.getElementById('customerAddress').value;

    if (!customerName || !customerPhone || !customerAddress) {

        showNotification('‚ùå –ó–∞–ø–æ–≤–Ω—ñ—Ç—å –≤—Å—ñ –ø–æ–ª—è!');

        return;

    }

    const total = cart.reduce((sum, item) => sum + (item.price * item.quantity), 0);

    const orderDetails = cart.map(item => 

        `‚ñ∏ ${item.name} - ${item.quantity} —à—Ç. √ó ${item.price} –≥—Ä–Ω = ${item.quantity * item.price} –≥—Ä–Ω`

    ).join('\n');

    const emailBody = `

üé£ –ù–û–í–ï –ó–ê–ú–û–í–õ–ï–ù–ù–Ø #${orderNumber}

üì¶ –î–ï–¢–ê–õ–Ü –ó–ê–ú–û–í–õ–ï–ù–ù–Ø:

–ù–æ–º–µ—Ä: #${orderNumber}

–î–∞—Ç–∞: ${new Date().toLocaleDateString('uk-UA')}

–ß–∞—Å: ${new Date().toLocaleTimeString('uk-UA')}

üë§ –î–ê–ù–Ü –ö–õ–Ü–Ñ–ù–¢–ê:

–Ü–º'—è: ${customerName}

–¢–µ–ª–µ—Ñ–æ–Ω: ${customerPhone}

–ê–¥—Ä–µ—Å–∞: ${customerAddress}

üõí –°–ö–õ–ê–î –ó–ê–ú–û–í–õ–ï–ù–ù–Ø:

${orderDetails}

üí∞ –ó–ê–ì–ê–õ–¨–ù–ê –°–£–ú–ê: ${total} –≥—Ä–Ω

---

–ë—Ä–∞—Å–ª–µ—Ç–∏ "–†–∏–±–∏–π —Ö–≤—ñ—Å—Ç"

üìû +380 (67) 123-45-67

üìß Gub.Sem.IT20@gmail.com

‚è∞ ${new Date().toLocaleString('uk-UA')}

    `.trim();

    // –û—Ç–ø—Ä–∞–≤–∫–∞ –Ω–∞ –ø–æ—á—Ç—É

    const emailLink = `mailto:Gub.Sem.IT20@gmail.com?subject=–ó–∞–º–æ–≤–ª–µ–Ω–Ω—è #${orderNumber}&body=${encodeURIComponent(emailBody)}`;

    window.open(emailLink, '_blank');

    showNotification('‚úÖ –ó–∞–º–æ–≤–ª–µ–Ω–Ω—è –≤—ñ–¥–ø—Ä–∞–≤–ª–µ–Ω–æ –Ω–∞ –ø–æ—à—Ç—É!');

    

    // –û—á–∏—Å—Ç–∫–∞ –∫–æ—Ä–∑–∏–Ω—ã

    cart = [];

    updateCartBadge();

    closeCart();

    orderNumber++;

}

// –ü–æ–∫–∞–∑–∞—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ

function showNotification(message) {

    // –£–¥–∞–ª—è–µ–º —Å—Ç–∞—Ä—ã–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è

    const oldNotifications = document.querySelectorAll('.notification');

    oldNotifications.forEach(notif => notif.remove());

    const notification = document.createElement('div');

    notification.className = 'notification';

    notification.textContent = message;

    document.body.appendChild(notification);

    setTimeout(() => {

        if (notification.parentElement) {

            notification.remove();

        }

    }, 4000);

}

// –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏

function updateProductQuantity(productId, change) {

    const item = cart.find(item => item.id === productId);

    if (item) {

        item.quantity += change;

        if (item.quantity <= 0) {

            removeFromCart(productId);

        } else {

            updateCartBadge();

            renderCart();

        }

    }

}

// –ü–æ–∏—Å–∫ —Ç–æ–≤–∞—Ä–æ–≤

function searchProducts(query) {

    const filteredProducts = products.filter(product => 

        product.name.toLowerCase().includes(query.toLowerCase()) ||

        product.description.toLowerCase().includes(query.toLowerCase())

    );

    renderFilteredProducts(filteredProducts);

}

function renderFilteredProducts(filteredProducts) {

    const grid = document.getElementById('productsGrid');

    grid.innerHTML = filteredProducts.map(product => `

        <div class="product-card">

            <div class="product-image">

                ${product.icon}

            </div>

            <div class="product-info">

                <h3 class="product-name">${product.name}</h3>

                <p>${product.description}</p>

                <p><small>${product.colors} –∫–æ–ª—å–æ—Ä–∏</small></p>

                <div class="product-price">${product.price} –≥—Ä–Ω</div>

                <button class="add-btn" onclick="addToCart(${product.id})">

                    –î–æ–¥–∞—Ç–∏ –≤ –∫–æ—à–∏–∫

                </button>

            </div>

        </div>

    `).join('');

}

// –§–∏–ª—å—Ç—Ä–∞—Ü–∏—è –ø–æ —Ü–µ–Ω–µ

function filterByPrice(maxPrice) {

    const filteredProducts = products.filter(product => product.price <= maxPrice);

    renderFilteredProducts(filteredProducts);

}

// –ü–æ–ª—É—á–∏—Ç—å —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –∫–æ—Ä–∑–∏–Ω—ã

function getCartStats() {

    const totalItems = cart.reduce((sum, item) => sum + item.quantity, 0);

    const totalPrice = cart.reduce((sum, item) => sum + (item.price * item.quantity), 0);

    const uniqueItems = cart.length;

    

    return {

        totalItems,

        totalPrice,

        uniqueItems

    };

}

// –≠–∫—Å–ø–æ—Ä—Ç –¥–∞–Ω–Ω—ã—Ö –∑–∞–∫–∞–∑–∞

function exportOrder() {

    if (cart.length === 0) return;

    

    const stats = getCartStats();

    const orderData = {

        orderNumber: orderNumber,

        date: new Date().toISOString(),

        items: cart,

        total: stats.totalPrice,

        customer: {

            name: document.getElementById('customerName')?.value || '–ù–µ –≤–∫–∞–∑–∞–Ω–æ',

            phone: document.getElementById('customerPhone')?.value || '–ù–µ –≤–∫–∞–∑–∞–Ω–æ',

            address: document.getElementById('customerAddress')?.value || '–ù–µ –≤–∫–∞–∑–∞–Ω–æ'

        }

    };

    

    // –ú–æ–∂–Ω–æ —Å–æ—Ö—Ä–∞–Ω–∏—Ç—å –≤ localStorage –∏–ª–∏ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –Ω–∞ —Å–µ—Ä–≤–µ—Ä

    console.log('–î–∞–Ω—ñ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è:', orderData);

    return orderData;

}

// –í–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ –∫–æ—Ä–∑–∏–Ω—ã –∏–∑ localStorage

function loadCartFromStorage() {

    const savedCart = localStorage.getItem('braceletsCart');

    if (savedCart) {

        cart = JSON.parse(savedCart);

        updateCartBadge();

    }

}

// –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –∫–æ—Ä–∑–∏–Ω—ã –≤ localStorage

function saveCartToStorage() {

    localStorage.setItem('braceletsCart', JSON.stringify(cart));

}

// –û–±–Ω–æ–≤–ª–µ–Ω–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –≤ –∫–æ—Ä–∑–∏–Ω—É —Å —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ–º

function addToCartWithSave(productId) {

    addToCart(productId);

    saveCartToStorage();

}

// –ó–∞–∫—Ä—ã—Ç–∏–µ –∫–æ—Ä–∑–∏–Ω—ã –ø—Ä–∏ –∫–ª–∏–∫–µ –≤–Ω–µ –µ–µ

document.addEventListener('click', (e) => {

    if (e.target.classList.contains('cart-modal')) {

        closeCart();

    }

});

// –ó–∞–∫—Ä—ã—Ç–∏–µ –ø–æ ESC

document.addEventListener('keydown', (e) => {

    if (e.key === 'Escape') {

        closeCart();

    }

});

// –ó–∞–ø—É—Å–∫ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã

document.addEventListener('DOMContentLoaded', function() {

    init();

    loadCartFromStorage(); // –ó–∞–≥—Ä—É–∂–∞–µ–º —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—É—é –∫–æ—Ä–∑–∏–Ω—É

    

    // –î–æ–±–∞–≤–ª—è–µ–º –ø–æ–∏—Å–∫ –µ—Å–ª–∏ –Ω—É–∂–Ω–æ

    const searchHTML = `

        <div style="text-align: center; margin-bottom: 2rem;">

            <input type="text" id="searchInput" placeholder="üîç –ü–æ—à—É–∫ –±—Ä–∞—Å–ª–µ—Ç—ñ–≤..." style="

                padding: 0.8rem 1rem;

                border: 2px solid #667eea;

                border-radius: 25px;

                width: 100%;

                max-width: 400px;

                font-size: 1rem;

            " oninput="searchProducts(this.value)">

        </div>

    `;

    

    const productsSection = document.querySelector('.products .container');

    const title = productsSection.querySelector('.section-title');

    title.insertAdjacentHTML('afterend', searchHTML);

});

// –û–±–Ω–æ–≤–ª—è–µ–º —Ñ—É–Ω–∫—Ü–∏—é –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –≤ –∫–æ—Ä–∑–∏–Ω—É –¥–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è

function addToCart(productId) {

    const product = products.find(p => p.id === productId);

    const existingItem = cart.find(item => item.id === productId);

    if (existingItem) {

        existingItem.quantity += 1;

    } else {

        cart.push({

            ...product,

            quantity: 1

        });

    }

    updateCartBadge();

    saveCartToStorage(); // –°–æ—Ö—Ä–∞–Ω—è–µ–º –ø–æ—Å–ª–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è

    showNotification('‚úÖ –¢–æ–≤–∞—Ä –¥–æ–¥–∞–Ω–æ –≤ –∫–æ—à–∏–∫!');

}

// –û–±–Ω–æ–≤–ª—è–µ–º —Ñ—É–Ω–∫—Ü–∏—é —É–¥–∞–ª–µ–Ω–∏—è –¥–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è

function removeFromCart(productId) {

    cart = cart.filter(item => item.id !== productId);

    updateCartBadge();

    saveCartToStorage(); // –°–æ—Ö—Ä–∞–Ω—è–µ–º –ø–æ—Å–ª–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è

    renderCart();

}